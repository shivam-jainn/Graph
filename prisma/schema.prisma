generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  assistant
}

model User {
  id           String         @id @default(cuid())
  email        String         @unique
  name         String?
  sources      Source[]
  sessions     ChatSession[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model Source {
  id          String             @id @default(cuid())
  title       String
  filePath    String
  fileType    String
  user        User               @relation(fields: [userId], references: [id])
  userId      String
  sessions    ChatSession[]      @relation("SessionSources")
  messageRefs MessageSourceRef[]
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
}

model ChatSession {
  id          String           @id @default(cuid())
  title       String?
  user        User             @relation(fields: [userId], references: [id])
  userId      String
  messages    ChatMessage[]
  sources     Source[]         @relation("SessionSources")
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
}

model ChatMessage {
  id            String             @id @default(cuid())
  session       ChatSession        @relation(fields: [sessionId], references: [id])
  sessionId     String
  content       String
  role          Role
  sourceRefs    MessageSourceRef[]
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
}

model MessageSourceRef {
  id         String       @id @default(cuid())
  message    ChatMessage  @relation(fields: [messageId], references: [id])
  messageId  String
  source     Source       @relation(fields: [sourceId], references: [id])
  sourceId   String
  page       Int?
  snippet    String?
}
